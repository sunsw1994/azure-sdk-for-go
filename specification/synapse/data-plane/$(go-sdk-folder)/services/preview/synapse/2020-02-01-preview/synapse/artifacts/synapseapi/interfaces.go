package synapseapi

// Copyright (c) Microsoft and contributors.  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
    "context"
    "$(go-sdk-folder)/services/preview/synapse/2020-02-01-preview/synapse/artifacts"
    "github.com/Azure/go-autorest/autorest"
)

        // LinkedServiceClientAPI contains the set of methods on the LinkedServiceClient type.
        type LinkedServiceClientAPI interface {
            CreateOrUpdateLinkedService(ctx context.Context, linkedServiceName string, linkedService synapse.LinkedServiceResource, ifMatch string) (result synapse.LinkedServiceCreateOrUpdateLinkedServiceFuture, err error)
            DeleteLinkedService(ctx context.Context, linkedServiceName string) (result synapse.LinkedServiceDeleteLinkedServiceFuture, err error)
            GetLinkedService(ctx context.Context, linkedServiceName string, ifNoneMatch string) (result synapse.LinkedServiceResource, err error)
            GetLinkedServicesByWorkspace(ctx context.Context) (result synapse.LinkedServiceListResponsePage, err error)
                GetLinkedServicesByWorkspaceComplete(ctx context.Context) (result synapse.LinkedServiceListResponseIterator, err error)
        }

        var _ LinkedServiceClientAPI = (*synapse.LinkedServiceClient)(nil)
        // DatasetClientAPI contains the set of methods on the DatasetClient type.
        type DatasetClientAPI interface {
            CreateOrUpdateDataset(ctx context.Context, datasetName string, dataset synapse.DatasetResource, ifMatch string) (result synapse.DatasetCreateOrUpdateDatasetFuture, err error)
            DeleteDataset(ctx context.Context, datasetName string) (result synapse.DatasetDeleteDatasetFuture, err error)
            GetDataset(ctx context.Context, datasetName string, ifNoneMatch string) (result synapse.DatasetResource, err error)
            GetDatasetsByWorkspace(ctx context.Context) (result synapse.DatasetListResponsePage, err error)
                GetDatasetsByWorkspaceComplete(ctx context.Context) (result synapse.DatasetListResponseIterator, err error)
        }

        var _ DatasetClientAPI = (*synapse.DatasetClient)(nil)
        // PipelineClientAPI contains the set of methods on the PipelineClient type.
        type PipelineClientAPI interface {
            CreateOrUpdatePipeline(ctx context.Context, pipelineName string, pipeline synapse.PipelineResource, ifMatch string) (result synapse.PipelineCreateOrUpdatePipelineFuture, err error)
            CreatePipelineRun(ctx context.Context, pipelineName string, referencePipelineRunID string, isRecovery *bool, startActivityName string, parameters map[string]interface{}) (result synapse.CreateRunResponse, err error)
            DeletePipeline(ctx context.Context, pipelineName string) (result synapse.PipelineDeletePipelineFuture, err error)
            GetPipeline(ctx context.Context, pipelineName string, ifNoneMatch string) (result synapse.PipelineResource, err error)
            GetPipelinesByWorkspace(ctx context.Context) (result synapse.PipelineListResponsePage, err error)
                GetPipelinesByWorkspaceComplete(ctx context.Context) (result synapse.PipelineListResponseIterator, err error)
        }

        var _ PipelineClientAPI = (*synapse.PipelineClient)(nil)
        // PipelineRunClientAPI contains the set of methods on the PipelineRunClient type.
        type PipelineRunClientAPI interface {
            CancelPipelineRun(ctx context.Context, runID string, isRecursive *bool) (result autorest.Response, err error)
            GetPipelineRun(ctx context.Context, runID string) (result synapse.PipelineRun, err error)
            QueryActivityRuns(ctx context.Context, pipelineName string, runID string, filterParameters synapse.RunFilterParameters) (result synapse.ActivityRunsQueryResponse, err error)
            QueryPipelineRunsByWorkspace(ctx context.Context, filterParameters synapse.RunFilterParameters) (result synapse.PipelineRunsQueryResponse, err error)
        }

        var _ PipelineRunClientAPI = (*synapse.PipelineRunClient)(nil)
        // TriggerClientAPI contains the set of methods on the TriggerClient type.
        type TriggerClientAPI interface {
            CreateOrUpdateTrigger(ctx context.Context, triggerName string, trigger synapse.TriggerResource, ifMatch string) (result synapse.TriggerCreateOrUpdateTriggerFuture, err error)
            DeleteTrigger(ctx context.Context, triggerName string) (result synapse.TriggerDeleteTriggerFuture, err error)
            GetEventSubscriptionStatus(ctx context.Context, triggerName string) (result synapse.TriggerSubscriptionOperationStatus, err error)
            GetTrigger(ctx context.Context, triggerName string, ifNoneMatch string) (result synapse.TriggerResource, err error)
            GetTriggersByWorkspace(ctx context.Context) (result synapse.TriggerListResponsePage, err error)
                GetTriggersByWorkspaceComplete(ctx context.Context) (result synapse.TriggerListResponseIterator, err error)
            StartTrigger(ctx context.Context, triggerName string) (result synapse.TriggerStartTriggerFuture, err error)
            StopTrigger(ctx context.Context, triggerName string) (result synapse.TriggerStopTriggerFuture, err error)
            SubscribeTriggerToEvents(ctx context.Context, triggerName string) (result synapse.TriggerSubscribeTriggerToEventsFuture, err error)
            UnsubscribeTriggerFromEvents(ctx context.Context, triggerName string) (result synapse.TriggerUnsubscribeTriggerFromEventsFuture, err error)
        }

        var _ TriggerClientAPI = (*synapse.TriggerClient)(nil)
        // TriggerRunClientAPI contains the set of methods on the TriggerRunClient type.
        type TriggerRunClientAPI interface {
            CancelTriggerInstance(ctx context.Context, triggerName string, runID string) (result autorest.Response, err error)
            QueryTriggerRunsByWorkspace(ctx context.Context, filterParameters synapse.RunFilterParameters) (result synapse.TriggerRunsQueryResponse, err error)
            RerunTriggerInstance(ctx context.Context, triggerName string, runID string) (result autorest.Response, err error)
        }

        var _ TriggerRunClientAPI = (*synapse.TriggerRunClient)(nil)
        // DataFlowClientAPI contains the set of methods on the DataFlowClient type.
        type DataFlowClientAPI interface {
            CreateOrUpdateDataFlow(ctx context.Context, dataFlowName string, dataFlow synapse.DataFlowResource, ifMatch string) (result synapse.DataFlowCreateOrUpdateDataFlowFuture, err error)
            DeleteDataFlow(ctx context.Context, dataFlowName string) (result synapse.DataFlowDeleteDataFlowFuture, err error)
            GetDataFlow(ctx context.Context, dataFlowName string, ifNoneMatch string) (result synapse.DataFlowResource, err error)
            GetDataFlowsByWorkspace(ctx context.Context) (result synapse.DataFlowListResponsePage, err error)
                GetDataFlowsByWorkspaceComplete(ctx context.Context) (result synapse.DataFlowListResponseIterator, err error)
        }

        var _ DataFlowClientAPI = (*synapse.DataFlowClient)(nil)
        // DataFlowDebugSessionClientAPI contains the set of methods on the DataFlowDebugSessionClient type.
        type DataFlowDebugSessionClientAPI interface {
            AddDataFlow(ctx context.Context, request synapse.DataFlowDebugPackage) (result synapse.AddDataFlowToDebugSessionResponse, err error)
            CreateDataFlowDebugSession(ctx context.Context, request synapse.CreateDataFlowDebugSessionRequest) (result synapse.DataFlowDebugSessionCreateDataFlowDebugSessionFuture, err error)
            DeleteDataFlowDebugSession(ctx context.Context, request synapse.DeleteDataFlowDebugSessionRequest) (result autorest.Response, err error)
            ExecuteCommand(ctx context.Context, request synapse.DataFlowDebugCommandRequest) (result synapse.DataFlowDebugSessionExecuteCommandFuture, err error)
            QueryDataFlowDebugSessionsByWorkspace(ctx context.Context) (result synapse.QueryDataFlowDebugSessionsResponsePage, err error)
                QueryDataFlowDebugSessionsByWorkspaceComplete(ctx context.Context) (result synapse.QueryDataFlowDebugSessionsResponseIterator, err error)
        }

        var _ DataFlowDebugSessionClientAPI = (*synapse.DataFlowDebugSessionClient)(nil)
        // SQLScriptClientAPI contains the set of methods on the SQLScriptClient type.
        type SQLScriptClientAPI interface {
            CreateOrUpdateSQLScript(ctx context.Context, SQLScriptName string, SQLScript synapse.SQLScriptResource, ifMatch string) (result synapse.SQLScriptResource, err error)
            DeleteSQLScript(ctx context.Context, SQLScriptName string) (result autorest.Response, err error)
            GetSQLScript(ctx context.Context, SQLScriptName string, ifNoneMatch string) (result synapse.SQLScriptResource, err error)
            GetSQLScriptsByWorkspace(ctx context.Context) (result synapse.SQLScriptsListResponsePage, err error)
                GetSQLScriptsByWorkspaceComplete(ctx context.Context) (result synapse.SQLScriptsListResponseIterator, err error)
        }

        var _ SQLScriptClientAPI = (*synapse.SQLScriptClient)(nil)
        // SparkJobDefinitionClientAPI contains the set of methods on the SparkJobDefinitionClient type.
        type SparkJobDefinitionClientAPI interface {
            CreateOrUpdateSparkJobDefinition(ctx context.Context, sparkJobDefinitionName string, sparkJobDefinition synapse.SparkJobDefinitionResource, ifMatch string) (result synapse.SparkJobDefinitionResource, err error)
            DebugSparkJobDefinition(ctx context.Context, sparkJobDefinitionAzureResource synapse.SparkJobDefinitionResource) (result synapse.SparkJobDefinitionDebugSparkJobDefinitionFuture, err error)
            DeleteSparkJobDefinition(ctx context.Context, sparkJobDefinitionName string) (result autorest.Response, err error)
            ExecuteSparkJobDefinition(ctx context.Context, sparkJobDefinitionName string) (result synapse.SparkJobDefinitionExecuteSparkJobDefinitionFuture, err error)
            GetSparkJobDefinition(ctx context.Context, sparkJobDefinitionName string, ifNoneMatch string) (result synapse.SparkJobDefinitionResource, err error)
            GetSparkJobDefinitionsByWorkspace(ctx context.Context) (result synapse.SparkJobDefinitionsListResponsePage, err error)
                GetSparkJobDefinitionsByWorkspaceComplete(ctx context.Context) (result synapse.SparkJobDefinitionsListResponseIterator, err error)
        }

        var _ SparkJobDefinitionClientAPI = (*synapse.SparkJobDefinitionClient)(nil)
        // NotebookClientAPI contains the set of methods on the NotebookClient type.
        type NotebookClientAPI interface {
            CreateOrUpdateNotebook(ctx context.Context, notebookName string, notebook synapse.NotebookResource, ifMatch string) (result synapse.NotebookCreateOrUpdateNotebookFuture, err error)
            DeleteNotebook(ctx context.Context, notebookName string) (result synapse.NotebookDeleteNotebookFuture, err error)
            GetNotebook(ctx context.Context, notebookName string, ifNoneMatch string) (result synapse.NotebookResource, err error)
            GetNotebooksByWorkspace(ctx context.Context) (result synapse.NotebookListResponsePage, err error)
                GetNotebooksByWorkspaceComplete(ctx context.Context) (result synapse.NotebookListResponseIterator, err error)
            GetNotebookSummaryByWorkSpace(ctx context.Context) (result synapse.NotebookListResponsePage, err error)
                GetNotebookSummaryByWorkSpaceComplete(ctx context.Context) (result synapse.NotebookListResponseIterator, err error)
        }

        var _ NotebookClientAPI = (*synapse.NotebookClient)(nil)
        // WorkspaceClientAPI contains the set of methods on the WorkspaceClient type.
        type WorkspaceClientAPI interface {
            Get(ctx context.Context) (result synapse.Workspace, err error)
        }

        var _ WorkspaceClientAPI = (*synapse.WorkspaceClient)(nil)
        // SQLPoolsClientAPI contains the set of methods on the SQLPoolsClient type.
        type SQLPoolsClientAPI interface {
            Get(ctx context.Context, SQLPoolName string) (result synapse.SQLPool, err error)
            List(ctx context.Context) (result synapse.SQLPoolInfoListResult, err error)
        }

        var _ SQLPoolsClientAPI = (*synapse.SQLPoolsClient)(nil)
        // BigDataPoolsClientAPI contains the set of methods on the BigDataPoolsClient type.
        type BigDataPoolsClientAPI interface {
            Get(ctx context.Context, bigDataPoolName string) (result synapse.BigDataPoolResourceInfo, err error)
            List(ctx context.Context) (result synapse.BigDataPoolResourceInfoListResult, err error)
        }

        var _ BigDataPoolsClientAPI = (*synapse.BigDataPoolsClient)(nil)
        // IntegrationRuntimesClientAPI contains the set of methods on the IntegrationRuntimesClient type.
        type IntegrationRuntimesClientAPI interface {
            Get(ctx context.Context, integrationRuntimeName string) (result synapse.IntegrationRuntimeResource, err error)
            List(ctx context.Context) (result synapse.IntegrationRuntimeListResponse, err error)
        }

        var _ IntegrationRuntimesClientAPI = (*synapse.IntegrationRuntimesClient)(nil)
